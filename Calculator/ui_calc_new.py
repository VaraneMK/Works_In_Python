# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'z:\Avanesyan RSBO\5 sem\Python\calc_new.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import math


class Ui_MainWindow(object):
        def setupUi(self, MainWindow):
            MainWindow.setObjectName("MainWindow")
            MainWindow.resize(413, 580)
            MainWindow.setStyleSheet("background-color:rgb(0,0,0);")
            self.centralwidget = QtWidgets.QWidget(MainWindow)
            self.centralwidget.setObjectName("centralwidget")
            self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
            self.lineEdit.setGeometry(QtCore.QRect(10, 30, 391, 81))
            self.lineEdit.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight)
            self.lineEdit.setReadOnly(True)
            self.lineEdit.setStyleSheet("background-color: rgb(0, 0, 0);\n"
"color: rgb(255, 255, 255);\n"
"font-size:30px;\n"
"border:1px solid rgb(0,0,0);")
            self.lineEdit.setText("")
            self.lineEdit.setObjectName("lineEdit")
            self
            self.pushButton_clear = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_clear.setGeometry(QtCore.QRect(10, 140, 71, 71))
            self.pushButton_clear.setStyleSheet("background-color: rgb(0, 121, 181);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"font-size:23px;")
            self.pushButton_clear.setObjectName("pushButton_clear")
            self.pushButton_div = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_div.setGeometry(QtCore.QRect(90, 140, 71, 71))
            self.pushButton_div.setStyleSheet("background-color: rgb(0, 121, 181);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"font-size:23px;")
            self.pushButton_div.setObjectName("pushButton_div")
            self.pushButton_multiply = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_multiply.setGeometry(QtCore.QRect(170, 140, 71, 71))
            self.pushButton_multiply.setStyleSheet("background-color: rgb(0, 121, 181);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"font-size:23px;")
            self.pushButton_multiply.setObjectName("pushButton_multiply")
            self.pushButton_erase = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_erase.setGeometry(QtCore.QRect(250, 140, 151, 71))
            self.pushButton_erase.setStyleSheet("background-color: rgb(0, 121, 181);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"font-size:23px;")
            self.pushButton_erase.setObjectName("pushButton_erase")
            self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_3.setGeometry(QtCore.QRect(250, 220, 71, 71))
            self.pushButton_3.setStyleSheet("background-color: rgb(108, 108, 108);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"font-size:23px;")
            self.pushButton_3.setObjectName("pushButton_3")
            self.pushButton_minus = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_minus.setGeometry(QtCore.QRect(330, 220, 71, 71))
            self.pushButton_minus.setStyleSheet("background-color: rgb(0, 121, 181);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"font-size:23px;")
            self.pushButton_minus.setObjectName("pushButton_minus")
            self.pushButton_1 = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_1.setGeometry(QtCore.QRect(90, 220, 71, 71))
            self.pushButton_1.setStyleSheet("background-color: rgb(108, 108, 108);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"font-size:23px;")
            self.pushButton_1.setObjectName("pushButton_1")
            self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_2.setGeometry(QtCore.QRect(170, 220, 71, 71))
            self.pushButton_2.setStyleSheet("background-color: rgb(108, 108, 108);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"font-size:23px;")
            self.pushButton_2.setObjectName("pushButton_2")
            self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_6.setGeometry(QtCore.QRect(250, 300, 71, 71))
            self.pushButton_6.setStyleSheet("background-color: rgb(108, 108, 108);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"font-size:23px;")
            self.pushButton_6.setObjectName("pushButton_6")
            self.pushButton_plus = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_plus.setGeometry(QtCore.QRect(330, 300, 71, 71))
            self.pushButton_plus.setStyleSheet("background-color: rgb(0, 121, 181);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"font-size:23px;")
            self.pushButton_plus.setObjectName("pushButton_plus")
            self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_4.setGeometry(QtCore.QRect(90, 300, 71, 71))
            self.pushButton_4.setStyleSheet("background-color: rgb(108, 108, 108);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"font-size:23px;")
            self.pushButton_4.setObjectName("pushButton_4")
            self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_5.setGeometry(QtCore.QRect(170, 300, 71, 71))
            self.pushButton_5.setStyleSheet("background-color: rgb(108, 108, 108);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"font-size:23px;")
            self.pushButton_5.setObjectName("pushButton_5")
            self.pushButton_9 = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_9.setGeometry(QtCore.QRect(250, 380, 71, 71))
            self.pushButton_9.setStyleSheet("background-color: rgb(108, 108, 108);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"font-size:23px;")
            self.pushButton_9.setObjectName("pushButton_9")
            self.pushButton_7 = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_7.setGeometry(QtCore.QRect(90, 380, 71, 71))
            self.pushButton_7.setStyleSheet("background-color: rgb(108, 108, 108);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"font-size:23px;")
            self.pushButton_7.setObjectName("pushButton_7")
            self.pushButton_8 = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_8.setGeometry(QtCore.QRect(170, 380, 71, 71))
            self.pushButton_8.setStyleSheet("background-color: rgb(108, 108, 108);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"font-size:23px;")
            self.pushButton_8.setObjectName("pushButton_8")
            self.pushButton_comma = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_comma.setGeometry(QtCore.QRect(250, 460, 71, 71))
            self.pushButton_comma.setStyleSheet("background-color: rgb(108, 108, 108);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"font-size:23px;")
            self.pushButton_comma.setObjectName("pushButton_comma")
            self.pushButton_res = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_res.setGeometry(QtCore.QRect(330, 380, 71, 151))
            self.pushButton_res.setStyleSheet("background-color: rgb(0, 121, 181);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"font-size:23px;")
            self.pushButton_res.setObjectName("pushButton_res")
            self.pushButton_persent = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_persent.setGeometry(QtCore.QRect(90, 460, 71, 71))
            self.pushButton_persent.setStyleSheet("background-color: rgb(108, 108, 108);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"font-size:23px;")
            self.pushButton_persent.setObjectName("pushButton_persent")
            self.pushButton_0 = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_0.setGeometry(QtCore.QRect(170, 460, 71, 71))
            self.pushButton_0.setStyleSheet("background-color: rgb(108, 108, 108);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"font-size:23px;")
            self.pushButton_0.setObjectName("pushButton_0")
            self.pushButton_sin = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_sin.setGeometry(QtCore.QRect(10, 220, 71, 71))
            self.pushButton_sin.setStyleSheet("background-color: rgb(0, 121, 181);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"font-size:23px;")
            self.pushButton_sin.setObjectName("pushButton_sin")
            self.pushButton_cos = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_cos.setGeometry(QtCore.QRect(10, 300, 71, 71))
            self.pushButton_cos.setStyleSheet("background-color: rgb(0, 121, 181);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"font-size:23px;")
            self.pushButton_cos.setObjectName("pushButton_cos")
            self.pushButton_tg = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_tg.setGeometry(QtCore.QRect(10, 380, 71, 71))
            self.pushButton_tg.setStyleSheet("background-color: rgb(0, 121, 181);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"font-size:23px;")
            self.pushButton_tg.setObjectName("pushButton_tg")
            self.pushButton_ctg = QtWidgets.QPushButton(self.centralwidget)
            self.pushButton_ctg.setGeometry(QtCore.QRect(10, 460, 71, 71))
            self.pushButton_ctg.setStyleSheet("background-color: rgb(0, 121, 181);\n"
"color: rgb(255, 255, 255);\n"
"border-radius: 10px;\n"
"font-size:23px;")
            self.pushButton_ctg.setObjectName("pushButton_ctg")
            MainWindow.setCentralWidget(self.centralwidget)
            self.menubar = QtWidgets.QMenuBar(MainWindow)
            self.menubar.setGeometry(QtCore.QRect(0, 0, 413, 21))
            self.menubar.setObjectName("menubar")
            MainWindow.setMenuBar(self.menubar)
            self.statusbar = QtWidgets.QStatusBar(MainWindow)
            self.statusbar.setObjectName("statusbar")
            MainWindow.setStatusBar(self.statusbar)

            self.retranslateUi(MainWindow)
            QtCore.QMetaObject.connectSlotsByName(MainWindow)

        def retranslateUi(self, MainWindow):
            _translate = QtCore.QCoreApplication.translate
            MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
            self.pushButton_clear.setText(_translate("MainWindow", "C"))
            self.pushButton_div.setText(_translate("MainWindow", "/"))
            self.pushButton_multiply.setText(_translate("MainWindow", "*"))
            self.pushButton_erase.setText(_translate("MainWindow", "<--"))
            self.pushButton_3.setText(_translate("MainWindow", "3"))
            self.pushButton_minus.setText(_translate("MainWindow", "-"))
            self.pushButton_1.setText(_translate("MainWindow", "1"))
            self.pushButton_2.setText(_translate("MainWindow", "2"))
            self.pushButton_6.setText(_translate("MainWindow", "6"))
            self.pushButton_plus.setText(_translate("MainWindow", "+"))
            self.pushButton_4.setText(_translate("MainWindow", "4"))
            self.pushButton_5.setText(_translate("MainWindow", "5"))
            self.pushButton_9.setText(_translate("MainWindow", "9"))
            self.pushButton_7.setText(_translate("MainWindow", "7"))
            self.pushButton_8.setText(_translate("MainWindow", "8"))
            self.pushButton_comma.setText(_translate("MainWindow", "."))
            self.pushButton_res.setText(_translate("MainWindow", "="))
            self.pushButton_persent.setText(_translate("MainWindow", "%"))
            self.pushButton_0.setText(_translate("MainWindow", "0"))
            self.pushButton_sin.setText(_translate("MainWindow", "sin"))
            self.pushButton_cos.setText(_translate("MainWindow", "cos"))
            self.pushButton_tg.setText(_translate("MainWindow", "tg"))
            self.pushButton_ctg.setText(_translate("MainWindow", "ctg"))
            self.add_functions()

        symbols = ['+','-','/','*','%','.']
        def add_functions(self):
                self.pushButton_0.clicked.connect(lambda: self.write_symbol(self.pushButton_0.text()))
                self.pushButton_1.clicked.connect(lambda: self.write_symbol(self.pushButton_1.text()))
                self.pushButton_2.clicked.connect(lambda: self.write_symbol(self.pushButton_2.text()))
                self.pushButton_3.clicked.connect(lambda: self.write_symbol(self.pushButton_3.text()))
                self.pushButton_4.clicked.connect(lambda: self.write_symbol(self.pushButton_4.text()))
                self.pushButton_5.clicked.connect(lambda: self.write_symbol(self.pushButton_5.text()))
                self.pushButton_6.clicked.connect(lambda: self.write_symbol(self.pushButton_6.text()))
                self.pushButton_7.clicked.connect(lambda: self.write_symbol(self.pushButton_7.text()))
                self.pushButton_8.clicked.connect(lambda: self.write_symbol(self.pushButton_8.text()))
                self.pushButton_9.clicked.connect(lambda: self.write_symbol(self.pushButton_9.text()))
                self.pushButton_minus.clicked.connect(lambda: self.write_symbol(self.pushButton_minus.text()))
                self.pushButton_plus.clicked.connect(lambda: self.write_symbol(self.pushButton_plus.text()))
                self.pushButton_persent.clicked.connect(lambda: self.write_symbol(self.pushButton_persent.text()))
                self.pushButton_comma.clicked.connect(lambda: self.write_symbol(self.pushButton_comma.text()))
                self.pushButton_multiply.clicked.connect(lambda: self.write_symbol(self.pushButton_multiply.text()))
                self.pushButton_div.clicked.connect(lambda: self.write_symbol(self.pushButton_div.text()))
                self.pushButton_erase.clicked.connect(lambda: self.backspace())
                self.pushButton_clear.clicked.connect(lambda:self.clear())
                self.pushButton_res.clicked.connect(lambda:self.res())
                self.pushButton_sin.clicked.connect(lambda:self.functions(self.pushButton_sin.text()))
                self.pushButton_cos.clicked.connect(lambda:self.functions(self.pushButton_cos.text()))
                self.pushButton_tg.clicked.connect(lambda:self.functions(self.pushButton_tg.text()))
                self.pushButton_ctg.clicked.connect(lambda:self.functions(self.pushButton_ctg.text()))


        
        def write_symbol(self,number):
                text = self.lineEdit.text()
                if text == "" and number == "-":
                    self.lineEdit.setText(number)
                else:
                    if text != "Error":
                            if len(text) > 0:
                                    if number not in self.symbols:
                                            if text == '0':
                                                    self.lineEdit.setText(number)
                                            else:
                                                    self.lineEdit.setText(self.lineEdit.text()+number) 
                                    else:
                                            if text[-1] not in self.symbols:
                                                    self.lineEdit.setText(self.lineEdit.text()+number)
                            else:
                                    if number not in self.symbols:
                                           self.lineEdit.setText(self.lineEdit.text()+number) 
                    else: 
                            self.lineEdit.setText(number)
                
        def backspace(self):
                text = ui.lineEdit.text()
                self.lineEdit.setText(text[:len(text)-1])
        
        def clear(self):
                self.lineEdit.setText('')

        def res(self):
                text = self.lineEdit.text()
                try:
                        res = eval(text)
                        self.lineEdit.setText(str(res))
                except Exception as ex:
                        self.lineEdit.setText('Error')
                        
        def functions(self,number):
                if self.lineEdit.text()!= "":
                        if self.lineEdit.text() != 'Error':
                            if self.lineEdit.text().isnumeric():
                                match number:
                                        case 'sin':
                                                self.lineEdit.setText(str(round(math.sin(math.radians(float(self.lineEdit.text()))),2)))
                                        case 'cos':
                                                self.lineEdit.setText(str(round(math.cos(math.radians(float(self.lineEdit.text()))),2)))
                                        case 'tg':
                                                self.lineEdit.setText(str(round(math.tan(math.radians(float(self.lineEdit.text()))),2)))
                                        case 'ctg':
                                                self.lineEdit.setText(str(1/round(math.tan(math.radians(float(self.lineEdit.text()))),2)))
                            else:
                                self.lineEdit.setText('Error')



                
if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    mainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(mainWindow)
    mainWindow.show()
    sys.exit(app.exec_())